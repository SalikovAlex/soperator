apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ include "slurm-cluster-storage.volume.jail.mount" . }}
spec:
  selector:
    matchLabels:
      slurm: {{ include "slurm-cluster-storage.volume.jail.mount" . }}
  template:
    metadata:
      labels:
        slurm: {{ include "slurm-cluster-storage.volume.jail.mount" . }}
    spec:
{{- if eq (include "slurm-cluster-storage.volume.jail.type" .) "glusterfs" }}
      hostNetwork: true
      hostPID: true
      hostIPC: true
{{- end }}
      containers:
        - name: {{ cat "mount-jail" (include "slurm-cluster-storage.volume.jail.type" .) | kebabcase }}
{{- if eq (include "slurm-cluster-storage.volume.jail.type" .) "filestore" }}
          image: busybox
{{- else }}
          image: ubuntu:focal
{{- end }}
          command:
            - /bin/sh
            - -c
{{- if eq (include "slurm-cluster-storage.volume.jail.type" .) "filestore" }}
            - /mount-scripts/ensure_mounted_filestore.sh -d {{ include "slurm-cluster-storage.volume.jail.device" . }} -p /mnt/jail -s 60
{{- else }}
            - /mount-scripts/ensure_mounted_glusterfs.sh -g {{ include "slurm-cluster-storage.volume.jail.hostname" . }} -p /mnt/jail -s 60
{{- end }}
          securityContext:
            privileged: true
          volumeMounts:
            - name: host-mount
              mountPath: /host/mnt
              mountPropagation: Bidirectional
            - name: mount-scripts
              mountPath: /mount-scripts
      volumes:
        - name: host-mount
          hostPath:
            path: /mnt
        - name: mount-scripts
          configMap:
            name: mount-scripts
            defaultMode: 0500
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
{{ .Values.scheduling.cpuAndGpu.matchExpressions | toYaml | indent 18 }}
      tolerations:
{{ .Values.scheduling.cpuAndGpu.tolerations | toYaml | indent 8 }}
